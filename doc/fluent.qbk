[section:fluent Fluent Interface]

There is an alternative interface provided for using the library.
This section is dedicated to covering the parallels between the
fluent interface and the normal directive-based interface. Each
construct is presented as a side-by-side comparison at least for 
the fluent interface supported functions.

[note To use the fluent interface, you include the 
`memcachepp/memcache/fluent.hpp` header, and then issue the 
`using namespace memcache::fluent;` directive in the scope you
want to be able to use the fluent interface.]

[table
    [[Directives] [Fluent] [Description]]
    [
     [`mc << memcache::set("key", value);`] 
     [`key(mc, "key") = value;`]
     [Sets the value of the given key.]
    ]
    [
     [`mc << memcache::get("key", value);`]
     [`wrap(value) = get(mc, "key");`]
     [Retrieve the value set for the given key.]
    ]
    [
     [`mc << memcache::raw_set("key", "value");`]
     [`key(mc, "key") %= "value";`]
     [Set the raw value of the given key.]
    ]
    [
     [`mc << memcache::raw_get("key", container);`]
     [`wrap(container) = raw(mc, "key");`]
     [Retrieve the raw value of the given key.]
    ]
    [
     [`mc << memcache::replace("key", value);`]
     [`key(mc, "key") ^= value;`]
     [Replace the value associated with the given key.]
    ]
    [
     [`mc << memcache::add("key", value);`]
     [`key(mc, "key") /= value;`]
     [Add the value associated with the given key.]
    ]
    [
     [`mc << memcache::raw_add("key", "value");`]
     [`key(mc, "key") *= "value";`]
     [Add the raw "value" associated with the given key.]
    ]
    [
     [`mc << memcache::raw_append("key", "value");`]
     [`key(mc, "key") >>= "value";`]
     [Append the raw "value" to the raw value associated with the given key.]
    ]
    [
     [`mc << memcache::raw_prepend("key", "value");`]
     [`key(mc, "key") <<= "value";`]
     [Prepend the raw "value" to the raw value associated with the given key.]
    ]
    [
     [`mc << memcache::incr("key", holder, 1);`]
     [`holder = key(mc, "key")++;`]
     [Increment the value associated with key and then yield the value to holder.]
    ]
    [
     [`mc << memcache::incr("key", holder, 10);`]
     [`holder = key(mc, "key") += 10;`]
     [Increment the value associated with key by 10 and then yield the value to holder.]
    ]
    [
     [`mc << memcache::decr("key", holder, 1);`]
     [`holder = key(mc, "key")--;`]
     [Decrement the value associated with key and then yield the value to holder.]
    ]
    [
     [`mc << memcache::decr("key", holder, 10);`]
     [`holder = key(mc, "key") -= 10;`]
     [Decrement the value associated with key by 10 and then yield the value to holder.]
    ]
]

[endsect] [/Fluent Interface] 

