include_directories(${MEMCACHEPP_SOURCE_DIR})
find_package( Boost 1.41.0 COMPONENTS unit_test_framework system regex date_time thread serialization chrono )
set(Boost_USE_STATIC_LIBS OFF)
set(Boost_USE_MULTITHREADED ON)
#find_package(Threads)

if (Boost_FOUND)
    add_definitions( -D_REENTRANT )
    add_executable(memcache_fluent memcache_fluent_interface.cpp)
    add_executable(memcache_hash memcache_hash_test.cpp)
    add_executable(memcache_pool memcache_pool_test.cpp)
    add_executable(memcache_protocol_parser memcache_protocol_parser_test.cpp)
    add_executable(memcache_protocol memcache_protocol_test.cpp)
    target_link_libraries(memcache_fluent ${Boost_LIBRARIES} ${CMAKE_THREAD_LIBS_INIT})
    target_link_libraries(memcache_hash ${Boost_LIBRARIES} ${CMAKE_THREAD_LIBS_INIT})
    target_link_libraries(memcache_pool ${Boost_LIBRARIES} ${CMAKE_THREAD_LIBS_INIT})
    target_link_libraries(memcache_protocol_parser ${Boost_LIBRARIES} ${CMAKE_THREAD_LIBS_INIT})
    target_link_libraries(memcache_protocol ${Boost_LIBRARIES} ${CMAKE_THREAD_LIBS_INIT})
    set_target_properties(memcache_fluent memcache_hash memcache_pool memcache_protocol memcache_protocol_parser PROPERTIES RUNTIME_OUTPUT_DIRECTORY ../test-bin)
    add_test(fluent_interface ../test-bin/memcache_fluent)
    add_test(hash_implementation ../test-bin/memcache_hash)
    add_test(pool_implementation ../test-bin/memcache_pool)
    add_test(protocol_parser ../test-bin/memcache_protocol_parser)
    add_test(protocol_implementation ../test-bin/memcache_protocol)
endif()

